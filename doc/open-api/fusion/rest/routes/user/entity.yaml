get:
  tags:
    - User
  summary: Gets a single user
  parameters:
    - $ref: '../../parameters/authorization.yaml'
    - $ref: '../../parameters/include.yaml'
    - in: path
      name: id
      description: id of the user to get
      required: true
      schema:
        $ref: "../../schemas/generics/id.yaml"
  responses:
    200:
      description: JSON of fetched user
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "../../schemas/types/0.user-with-relations.yaml"
              status:
                allOf:
                  - $ref: '../../schemas/generics/status.yaml'
                  - type: object
                    properties:
                      message:
                        example: null
    404:
      description: User not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                allOf:
                  - $ref: '../../schemas/generics/status.yaml'
                  - type: object
                    properties:
                      code:
                        example: 404
                      message:
                        example: "User not found"
put:
  tags:
    - User
  summary: Updates a single user
  parameters:
    - $ref: '../../parameters/authorization.yaml'
    - in: path
      name: id
      description: id of the user to update
      required: true
      schema:
        $ref: "../../schemas/generics/id.yaml"
  requestBody:
    description: A JSON representation of input user data
    required: true
    content:
      application/json:
        schema:
          $ref: '../../schemas/types/0.user-dto.yaml'
  responses:
    200:
      description: JSON of updated user
      content:
        application/json:
          schema:
            $ref: "../../schemas/types/0.user.yaml"
    404:
      description: User not found
delete:
  tags:
    - User
  summary: Deletes a single user
  parameters:
    - $ref: '../../parameters/authorization.yaml'
    - in: path
      name: id
      description: id of the user to delete
      required: true
      schema:
        $ref: "../../schemas/generics/id.yaml"
  responses:
    200:
      description: JSON of deleted user
      content:
        application/json:
          schema:
            $ref: "../../schemas/types/0.user.yaml"
    404:
      description: User not found