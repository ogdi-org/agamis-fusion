fusion {
    core {
        db {
            mongo {
                uri = "mongodb://mongo:mongo@mongodb:27017"
            }
            ignite {
                nodes = [
                    "apache-ignite-1",
                ]
                backups = 1
            }
        }
    }
}

mongo-async-driver {
    pekko {
        loggers = [ "org.apache.pekko.event.slf4j.Slf4jLogger" ]
        loglevel = DEBUG
    }
}

pekko {
    actor {
        provider = "cluster"
    }
    remote {
        log-remote-lifecycle-events = off
        enabled-transports = ["org.apache.pekko.remote.netty.tcp"]
        netty.tcp {
            hostname = "127.0.0.1"
            port = 2551
        }
    }

    cluster {
        seed-nodes = [
            # "pekko://ClusterSystem@127.0.0.1:2551",
            # "pekko://ClusterSystem@127.0.0.1:2552"
        ]

        # auto downing is NOT safe for production deployments.
        # you may want to use it during development, read more about it in the docs.
        #
        # auto-down-unreachable-after = 10s

        # Sigar native library extract location during tests.
        # Note: use per-jvm-instance folder when running multiple jvm on one host.
        metrics.native-library-extract-folder=${user.dir}/target/native
    }

    # Enable metrics extension in pekko-cluster-metrics.
    extensions=[
        "org.apache.pekko.cluster.metrics.ClusterMetricsExtension"
    ]
}

# A default thread pool for database related blocking operations
db-operations-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        core-pool-size-min = 2
        core-pool-size-factor = 2.0
        core-pool-size-max = 32
    }
    throughput = 1
}

# A default thread pool for blocking operations
default-blocking-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        core-pool-size-min = 2
        core-pool-size-factor = 2.0
        core-pool-size-max = 32
    }
}

jwt { #Handle it db side
    tokenExpiration {
        refreshTokenExpirationInSeconds = 1800
        tokenExpirationInSeconds = 3600
    }
}

